{"version":3,"sources":["Components/button/Button.jsx","App.js","reportWebVitals.js","index.js"],"names":["Button","props","state","event","preventDefault","stopPropagation","console","log","this","isDisabled","handleClick","content","className","onClick","handleNothing","React","Component","mobileMax","App","reportWindowSize","setState","width","window","innerWidth","isMobile","isTablet","addEventListener","removeEventListener","href","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gRAyBeA,E,kDArBX,WAAYC,GAAQ,IAAD,8BACf,cAAMA,IACDC,MAAQ,GAFE,E,iDAKnB,SAAcC,GACVA,EAAMC,iBACND,EAAME,kBACNC,QAAQC,IAAI,a,oBAGhB,WACI,MAA6CC,KAAKP,MAA1CQ,EAAR,EAAQA,WAAYC,EAApB,EAAoBA,YAAaC,EAAjC,EAAiCA,QACjC,OACI,wBAAQC,UAAWH,EAAa,WAAa,GAAII,QAASJ,EAAaD,KAAKM,cAAgBJ,EAA5F,SACKC,Q,GAhBII,IAAMC,WCCrBC,EAAY,IAiDHC,E,kDA7Cb,WAAYjB,GAAQ,IAAD,8BACjB,cAAMA,IAgBRkB,iBAAmB,SAAChB,GAClB,EAAKiB,SAAS,CACZC,MAAOC,OAAOC,WACdC,SAAUF,OAAOC,YAAcN,EAC/BQ,SAAYR,EAAYK,OAAOC,YAAgBD,OAAOC,YAxB1C,OAKd,EAAKrB,MAAQ,CACXmB,MAAOC,OAAOC,WACdC,SAAUF,OAAOC,YAAcN,EAC/BQ,SAAYR,EAAYK,OAAOC,YAAgBD,OAAOC,YAR1C,KAGG,E,qDASnB,WACED,OAAOI,iBAAiB,SAAUlB,KAAKW,oB,kCAGzC,WACEG,OAAOK,oBAAoB,SAAUnB,KAAKW,oB,yBAW5C,WACEb,QAAQC,IAAI,W,oBAGd,WACE,MAAoCC,KAAKN,MAAjCmB,EAAR,EAAQA,MAAMG,EAAd,EAAcA,SAASC,EAAvB,EAAuBA,SACvB,OACE,sBAAKb,UAAU,kBAAf,oBACUS,EACPG,GACD,0CAECC,GACD,mBAAGG,KAAK,iBAAR,6BACA,cAAC,EAAD,CAAQjB,QAAQ,OAAOF,YAAY,EAAOC,YAAaF,KAAKE,qB,GAxClDK,IAAMC,WCKTa,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.cb60e2de.chunk.js","sourcesContent":["import './Button.css';\nimport React from 'react'\n\nclass Button extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {}\n    }\n\n    handleNothing(event) {\n        event.preventDefault();\n        event.stopPropagation();\n        console.log(\"nothing\");\n    }\n\n    render() {\n        const { isDisabled, handleClick, content } = this.props;\n        return (\n            <button className={isDisabled ? \"disabled\" : \"\"} onClick={isDisabled ? this.handleNothing : handleClick}>\n                {content}\n            </button>\n        );\n    }  \n}\n    \nexport default Button;\n","import './App.css';\nimport React from 'react';\nimport Button from './Components/button/Button';\n\nconst mobileMax = 425;\nconst tabletMax = 992;\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      width: window.innerWidth,\n      isMobile: window.innerWidth <= mobileMax,\n      isTablet: ((mobileMax < window.innerWidth) && (window.innerWidth <= tabletMax)),\n    }\n  }\n\n  componentDidMount(){\n    window.addEventListener('resize', this.reportWindowSize);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('resize', this.reportWindowSize);\n  }\n\n  reportWindowSize = (event) => {\n    this.setState({ \n      width: window.innerWidth, \n      isMobile: window.innerWidth <= mobileMax, \n      isTablet: ((mobileMax < window.innerWidth) && (window.innerWidth <= tabletMax)), \n    });\n  }\n\n  handleClick() {\n    console.log(\"click\");\n  }\n\n  render() {\n    const { width,isMobile,isTablet } = this.state;\n    return (\n      <div className=\"App centralized\">\n        width: {width}\n        {isMobile && \n        <p>hola celu</p>\n        }\n        {isTablet &&\n        <a href=\"www.google.com\">link the tablet</a>}\n        <Button content=\"text\" isDisabled={false} handleClick={this.handleClick} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}